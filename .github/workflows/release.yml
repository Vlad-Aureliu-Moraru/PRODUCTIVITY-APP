name: Release TaskWatch Application

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "Official release of TaskWatch version ${{ github.ref_name }}."
          draft: false
          prerelease: false

  build-linux:
    name: Build for Linux
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Extract version from tag
        run: echo "APP_VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Compile Java code
        # Use **/*.java to recursively find all .java files in the src directory
        run: javac -d bin src/**/*.java

      - name: Create JAR file
        run: jar --create --file TaskWatch.jar --main-class Main -C bin .

      - name: Package for Linux using jpackage
        run: >
          jpackage --type tar.gz
          --name "TaskWatch"
          --app-version ${{ env.APP_VERSION }}
          --main-jar TaskWatch.jar
          --main-class Main
          --icon TaskWatch.png

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./TaskWatch-${{ env.APP_VERSION }}.tar.gz
          asset_name: TaskWatch-Linux-${{ env.APP_VERSION }}.tar.gz
          asset_content_type: application/gzip

  build-windows:
    name: Build for Windows
    needs: create_release
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Extract version from tag
        run: echo "APP_VERSION=$(${{ github.ref_name }} -replace '^v', '')" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Compile Java code
        # Use **/*.java to recursively find all .java files in the src directory
        run: javac -d bin src/**/*.java

      - name: Create JAR file
        run: jar --create --file TaskWatch.jar --main-class Main -C bin .

      - name: Package for Windows using jpackage
        run: >
          jpackage --type exe
          --name "TaskWatch"
          --app-version ${{ env.APP_VERSION }}
          --main-jar TaskWatch.jar
          --main-class Main
          --icon TaskWatch.ico

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./TaskWatch-${{ env.APP_VERSION }}.exe
          asset_name: TaskWatch-Windows-${{ env.APP_VERSION }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable
